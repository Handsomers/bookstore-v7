<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!-- 在上下文参数中配置视图前缀和视图后缀 -->
    <context-param>
        <param-name>view-prefix</param-name>
        <param-value>/WEB-INF/pages/</param-value>
    </context-param>
    <context-param>
        <param-name>view-suffix</param-name>
        <param-value>.html</param-value>
    </context-param>

    <!-- PortalServlet -->
    <servlet>
        <servlet-name>portalServlet</servlet-name>
        <servlet-class>com.nick.servlet.model.PortalServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>portalServlet</servlet-name>
        <url-pattern>/index.html</url-pattern>
    </servlet-mapping>
<!--    LoginFilter-->
    <filter>
        <filter-name>LoginFilter</filter-name>
        <filter-class>com.nick.filter.LoginFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>LoginFilter</filter-name>
        <url-pattern>/protected/*</url-pattern>
    </filter-mapping>

<!-- 注意:这个过滤器要配置在TransactionFilter之前 -->
    <filter>
        <filter-name>CloseConnectionFilter</filter-name>
        <filter-class>com.nick.filter.CloseConnectionFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>CloseConnectionFilter</filter-name>
      <!-- 需要关闭连接的请求都需要经过过滤器过滤 -->
        <url-pattern>/bookManager</url-pattern>
        <url-pattern>/protected/order</url-pattern>
        <url-pattern>/index.html</url-pattern>
        <url-pattern>/user</url-pattern>
        <url-pattern>/protected/cart</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>TransactionFilter</filter-name>
        <filter-class>com.nick.filter.TransactionFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>TransactionFilter</filter-name>
        <!-- 哪些请求要使⽤TransactionFilter做事务控制，这⾥就配置哪些请求的地址 -->
        <url-pattern>/protected/orderClient</url-pattern>
    </filter-mapping>

<!--    图书管理类-->
    <servlet>
        <servlet-name>managerServlet</servlet-name>
        <servlet-class>com.nick.servlet.model.BookManagerServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>managerServlet</servlet-name>
        <url-pattern>/protected/bookManager</url-pattern>
    </servlet-mapping>
<!--    AdminServlet-->
    <servlet>
        <servlet-name>AdminServlet</servlet-name>
        <servlet-class>com.nick.servlet.model.AdminServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>AdminServlet</servlet-name>
        <url-pattern>/admin</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>UserServlet</servlet-name>
        <servlet-class>com.nick.servlet.model.UserServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>UserServlet</servlet-name>
        <url-pattern>/user</url-pattern>
    </servlet-mapping>

    <!--    验证码servlet-->
    <servlet>
        <servlet-name>katchaServlet</servlet-name>
        <servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
        <!--    配置kaptcha.border的值位no取消图片边框-->
        <init-param>
            <param-name>kaptcha.boder</param-name>
            <param-value>no</param-value>
        </init-param>
        <!--        匹配图片的宽度-->
        <init-param>
            <param-name>kaptcha.image.width</param-name>
            <param-value>110</param-value>
        </init-param>
        <!--        匹配图片高度-->
        <init-param>
            <param-name>kaptcha.imge.hight</param-name>
            <param-value>20</param-value>
        </init-param>
        <!--        匹配字体大小-->
        <init-param>
            <param-name>keptcha.textproducer.font.size</param-name>
            <param-value>30</param-value>
        </init-param>
        <!--            在这里可以配置验证码存储进session时候的key-->
        <!--        <inin-param>-->
        <!--            <param-name>kaptcha.seesion.key</param-name>-->
        <!--            <param-value>serverCode</param-value>-->
        <!--        </inin-param>-->
        <init-param>
            <param-name>kaptcha.session.key</param-name>
            <param-value>serverCode</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
    <servlet-name>katchaServlet</servlet-name>
    <url-pattern>/kaptcha</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>LoginServlet</servlet-name>
        <servlet-class>com.nick.servlet.model.LoginServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>RegisterServlet</servlet-name>
        <servlet-class>com.nick.servlet.model.RegisterServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>OrderClientServlet</servlet-name>
        <servlet-class>com.nick.servlet.model.OrderClientServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>OrderClientServlet</servlet-name>
        <url-pattern>/protected/orderClient</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>CartServlet</servlet-name>
        <servlet-class>com.nick.servlet.model.CartServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>CartServlet</servlet-name>
        <url-pattern>/protected/cart</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>LoginServlet</servlet-name>
        <url-pattern>/login</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>RegisterServlet</servlet-name>
        <url-pattern>/register</url-pattern>
    </servlet-mapping>

</web-app>